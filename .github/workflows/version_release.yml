name: Create Releases
on:
    workflow_run:
        workflows: [Test]
        types: [completed]
        branches: [master]
env:
    TEST_NODE_VERSION: 22
jobs:
    build_suite:
        runs-on: ${{ matrix.os }}
        permissions:
            contents: write
        name: Version Release
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        timeout-minutes: 30
        strategy:
            max-parallel: 4
            matrix:
                os: [ubuntu-latest] #, windows-latest]
        steps:
            - name: Checkout
              uses: actions/checkout@v4.2.2
              with:
                  fetch-depth: 1000
                  token: ${{ secrets.GITHUB_TOKEN }}
                  ref: ${{ github.event.workflow_run.head_branch }}
            - name: Fetch Tags
              run: |
                  git fetch --prune --tags
                  echo exit code $?
                  git tag --list
            - name: Setup Node
              uses: actions/setup-node@v4.3.0
              with:
                  node-version: ${{env.TEST_NODE_VERSION}}
                  registry-url: 'https://registry.npmjs.org'
            - name: Install Deps
              run: |
                  npm ci --foreground-scripts
            - name: Run Build
              run: npx lerna run build
            - name: Setup GIT
              run: |
                  git config --local user.email "donmahallem@users.noreply.github.com"
                  git config --local user.name "donmahallem"
            - name: Version Packages
              run: npx lerna version --create-release github -y --force-git-tag
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

    release_npm:
        needs: [build_suite]
        runs-on: ubuntu-latest
        name: Publish Package to NPM
        timeout-minutes: 30
        steps:
            - name: Checkout
              uses: actions/checkout@v4.2.2
              with:
                  fetch-depth: 0
                  ref: ${{ github.event.workflow_run.head_branch }}
            - name: Fetch Tags
              run: git fetch --prune --tags
            - name: Setup Node
              uses: actions/setup-node@v4.3.0
              with:
                  node-version: ${{env.TEST_NODE_VERSION}}
                  registry-url: 'https://registry.npmjs.org'
            - name: Install Packages
              run: |
                  npm ci --foreground-scripts
            - name: Build Package
              run: npm run build
            - name: Prepare Package
              run: |
                  npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
            - name: Publish Packages
              run: npx lerna publish from-package -y --no-verify-access
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
    release_github:
        needs: [build_suite]
        runs-on: ubuntu-latest
        name: Publish Package to GITHUB
        permissions:
            packages: write
            contents: read
        steps:
            - name: Checkout
              uses: actions/checkout@v4.2.2
              with:
                  fetch-depth: 0
                  ref: ${{ github.event.workflow_run.head_branch }}
            - name: Fetch Tags
              run: git fetch --prune --tags
            - name: Setup Node
              uses: actions/setup-node@v4.3.0
              with:
                  node-version: ${{env.TEST_NODE_VERSION}}
            - name: Install Packages
              run: |
                  npm ci --foreground-scripts
            - name: Build Package
              run: npm run build
            - name: Prepare Package
              run: |
                  npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
            - name: Publish Packages
              run: npx lerna publish from-package -y --no-verify-access --registry https://npm.pkg.github.com/donmahallem
