name: Test
on: [push,pull_request]

jobs:
  build_suite:
    runs-on: ${{ matrix.os }}
    name: Build - ${{ matrix.os }} - Node ${{ matrix.node }}
    timeout-minutes: 30
    strategy:
      max-parallel: 4
      matrix:
        node: [12, 14, 16, 17]
        os: [ubuntu-latest] #, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 200
      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}
      - name: Setup Cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install Deps
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Run Build
        run: npx lerna run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2.3.0
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: |
            packages/*/dist
  test_suite:
    needs: build_suite
    runs-on: ${{ matrix.os }}
    name: Test - ${{ matrix.os }} - Node ${{ matrix.node }}
    timeout-minutes: 30
    strategy:
      max-parallel: 4
      matrix:
        node: [12, 14, 16]
        os: [ubuntu-latest] #, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 200
      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}
      - name: Setup Cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install Deps
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Download Build artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: ./packages
      - name: Run Test
        run: npx lerna run test:coverage
      - name: Retrieve Codecov Flag Name
        id: "flagname"
        run: |
          FLAGNAME=$(echo "${{ matrix.package.name }}" | sed -n -e 's/^.*\///p')
          echo "::set-output name=flagname::${FLAGNAME}"
      - name: Upload coverage to Codecov Monorepo
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit #${{ steps.flagname.outputs.flagname }}
          directory: ${{ matrix.package.location }}
          name: Test
          fail_ci_if_error: false
          verbose: false
  lint_suite:
    needs: build_suite
    runs-on: ${{ matrix.os }}
    name: Lint - ${{ matrix.os }} - Node ${{ matrix.node }}
    timeout-minutes: 30
    strategy:
      max-parallel: 4
      matrix:
        node: [16]
        os: [ubuntu-latest] #, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 200
      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}
      - name: Setup Cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install Deps
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Download Build artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: ./packages
      - name: Lint ALL Packages
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' || ( github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')) }}
        run: |
          npx lerna run lint
      - name: Lint Packages changed since dev
        if: ${{ github.event_name == 'push' && github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master' }}
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/dev:refs/remotes/origin/dev
          npx lerna run lint --since origin/dev
  docs_suite:
    needs: build_suite
    runs-on: ${{ matrix.os }}
    name: Docs - ${{ matrix.os }} - Node ${{ matrix.node }}
    # only run docs on pull_requests and non feature branches
    if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
    timeout-minutes: 30
    strategy:
      max-parallel: 4
      matrix:
        node: [16]
        os: [ubuntu-latest] #, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 200
      - name: Setup Node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node }}
      - name: Setup Cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node${{ matrix.node }}-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install Deps
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Download Build artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          name: build-${{matrix.os}}-${{matrix.node}}
          path: ./packages
      - name: Run Docs
        run: npx lerna run docs
  finish:
    needs: [test_suite, lint_suite, docs_suite]
    name: Finish Test
    runs-on: ubuntu-latest
    if: ${{ !failure() && !cancelled() }}
    steps:
    - name: Coveralls Finished
      run: echo "Test Finished"
